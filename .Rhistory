tester1$AdjTypeCnt[i] <- as.numeric(clean[1])
View(tester1)
tester1 <- scorebreak
temp1<-NULL
tester1$AdjType <- "temp"
tester1$AdjTypeCnt <- 0
for (i in 1:nrow(tester1)){
temp1<-tester1$Type[i]
catch<-ifelse(tester1$Type[i] == "Subtotal",clean<-do.call("rbind",list("0","Subtotal")),
clean<-do.call("rbind",strsplit(sub(" ", ";", temp1), ";")))
tester1$AdjType[i] <- as.character(clean[2])
tester1$AdjTypeCnt[i] <- as.numeric(clean[1])
}
View(tester1)
warnings()
View(tester1)
tester1[!complete.cases(tester1),]
View(tester1)
tail(tester1)
tail(tester1[id==9360,])
tester1[tester1$id==9360,]
tester1<-tester1[tester1$Type != "Bye Week"]
tester1<-tester1[tester1$Type != "Bye Week",]
tester1[tester1$id==9360,]
tester1 <- scorebreak
tester1<-tester1[tester1$Type != "Bye Week",]
tester1 <- scorebreak
tester1<-tester1[tester1$Type != "Bye Week",]
tester1$AdjType <- "temp"
tester1$AdjTypeCnt <- 0
for (i in 1:nrow(tester1)){
temp1<-tester1$Type[i]
catch<-ifelse(tester1$Type[i] == "Subtotal",clean<-do.call("rbind",list("0","Subtotal")),
clean<-do.call("rbind",strsplit(sub(" ", ";", temp1), ";")))
tester1$AdjType[i] <- as.character(clean[2])
tester1$AdjTypeCnt[i] <- as.numeric(clean[1])
}
View(tester1)
unique(tester1$AdjType)
View(tester1)
finalscoring<-tester1[,c("id","Week","AdjType","AdjTypeCnt","Points")]
View(finalscoring)
unique(tester1$AdjType)
pb <- txtProgressBar(min = 0, max = (length(weeks)*length(idv)), style = 3)
library("XML")
library("stringr")
library(plyr)
library(reshape2)
library(reshape)
#Get player and draft information
adp <- players <- NULL
aurl = "http://football33.myfantasyleague.com/2014/export?TYPE=adp&L=21819&W=&JSON=0"
adp <- xmlToList(xmlParse(aurl))
adp$.attrs <- NULL
adp <- data.frame(do.call(rbind, adp))
View(adp)
purl = "http://football33.myfantasyleague.com/2014/export?TYPE=players&L=21819&W=&JSON=0"
players <- xmlToList(xmlParse(purl))
players$.attrs <- NULL
players <- data.frame(do.call(rbind, players))
View(players)
#Get weekly scoreing data
weeks <- 1:3
weekscore <- ws <- NULL
for (i in  1:length(weeks)){
surl<-paste("http://football33.myfantasyleague.com/2014/export?TYPE=playerScores&L=21819&W=",weeks[i],"&JSON=0",sep="")
ws <- xmlToList(xmlParse(surl))
ws$.attrs <- NULL
ws <- data.frame(do.call(rbind,ws))
ws$isAvailable <- NULL
ws$week <- paste("Week",weeks[i],sep="")
ws$score <- as.double(as.character(ws$score))
weekscore <- rbind(weekscore,ws)
}
View(weekscore)
#Reshape scoring dataset to have weeks as variables
scores <- dcast(weekscore, id ~ week,value.var="score")
View(scores)
#Combine the data together
merged <- merge(players, adp, by="id", all.x=TRUE)
merged <- merge(merged, scores, by="id", all.x=TRUE)
View(merged)
#Fix name field to get the names in correct order
playerNames <- strsplit(as.character(merged$name), ", ")
merged$name <- unlist(lapply(playerNames,
function(x) paste(x[1:length(x) %% 2 == 0],
x[1:length(x) %% 2 != 0])))
View(merged)
#Keep only QBs, RBs, WRs, TEs, Ks, and Defs
merged$pos <- as.character(merged$position)
merged$pos[merged$pos == "PK"] <- "K"
merged <- merged[merged$pos %in% c("QB","RB","WR","TE","K","Def"),]
View(merged)
#Calculate overall rank
merged$pick <- as.numeric(as.character(merged$averagePick))
merged$overallRank <- rank(merged$pick, ties.method="min")
#Calculate position rank
qb <- merged[merged$pos=="QB",]
rb <- merged[merged$pos=="RB",]
wr <- merged[merged$pos=="WR",]
te <- merged[merged$pos=="TE",]
k <- merged[merged$pos=="K",]
def <- merged[merged$pos=="Def",]
qb$positionRank <- rank(qb$pick, ties.method="min")
rb$positionRank <- rank(rb$pick, ties.method="min")
wr$positionRank <- rank(wr$pick, ties.method="min")
te$positionRank <- rank(te$pick, ties.method="min")
k$positionRank <- rank(k$pick, ties.method="min")
def$positionRank <- rank(def$pick, ties.method="min")
#Merge across positions
merged <- rbind(qb,rb,wr,te,k,def)
#Order by average pick
merged <- merged[order(merged$pick),]
row.names(merged) <- 1:dim(merged)[1]
#Add year variable
merged$year <- 2014
#Subset data
merged <- merged[,c("id","name","year","pos","team","pick","overallRank","positionRank","Week1","Week2","Week3")]
View(merged)
######Get break down of points scored by type of play and week
idv <- as.character(merged$id)#[c(3,8,22,33)])
idv <- as.character(merged$id)
pb <- txtProgressBar(min = 0, max = (length(weeks)*length(idv)), style = 3)
scorebreak <- NULL
for (i in  1:length(weeks)){
k <- 0
for (j in idv) {
#Get Points Breakdown
sturl <- "http://football33.myfantasyleague.com/2014/detailed?L=21819&W="
hurl<-paste(sturl,weeks[i],"&P=",j,"&YEAR=2014",sep="")
tables <- readHTMLTable(hurl)
n.rows <- unlist(lapply(tables, function(t) dim(t)[1]))
sc1 <- tables[[2]]
sc1 <- sc1[-1,]
sc1$V1<-as.character(sc1$V1)
sc1$V2<-as.character(sc1$V2)
sc1$V3<-as.character(sc1$V3)
sc1[1,1] <- sc1[1,2]
sc1[1,2] <- sc1[1,3]
sc1$V3 <- NULL
colnames(sc1) <- c("Points","Type")
sc1$Week <- weeks[i]
sc1$id <- j
scorebreak <- rbind(scorebreak,sc1)
k <- k+1
setTxtProgressBar(pb, i*k)
}
}
#Clean up Type of Play to make categories
tester1 <- scorebreak
tester1<-tester1[tester1$Type != "Bye Week",]
tester1<-tester1[tester1$Type != "Subtotal",]
tester1$AdjType <- "temp"
tester1$AdjTypeCnt <- 0
for (i in 1:nrow(tester1)){
temp1<-tester1$Type[i]
catch<-ifelse(tester1$Type[i] == "Subtotal",clean<-do.call("rbind",list("0","Subtotal")),
clean<-do.call("rbind",strsplit(sub(" ", ";", temp1), ";")))
tester1$AdjType[i] <- as.character(clean[2])
tester1$AdjTypeCnt[i] <- as.numeric(clean[1])
}
finalscoring<-tester1[,c("id","Week","AdjType","AdjTypeCnt","Points")]
View(finalscoring)
View(merged)
unique(tester1$id)
scBreak1 <-dcast(finalscoring, id+Week ~ AdjType,value.var="Points")
View(scorebreak)
View(scBreak1)
tester1$Points <- as.numeric(tester1$Points)
finalscoring<-tester1[,c("id","Week","AdjType","AdjTypeCnt","Points")]
View(finalscoring)
scBreak1 <-dcast(finalscoring, id+Week ~ AdjType,value.var="Points")
View(scBreak1)
finalscoring<-tester1[,c("id","Week","AdjType","AdjTypeCnt","Points")]
scBreak1 <-dcast(finalscoring, id+Week ~ AdjType,value.var="Points")
scBreak1 <-dcast(finalscoring, id+Week ~ AdjType,sum, value.var="Points")
View(scorebreak)
View(scBreak1)
scBreak1 <-dcast(finalscoring, id+Week ~ AdjType,mean, value.var="Points")
View(scBreak1)
scBreak1 <-dcast(finalscoring, id+Week ~ AdjType,sum, value.var="Points")
View(scBreak1)
View(merged)
scBreak1[id=="9448",]
scBreak1[scBreak1$id=="9448",]
View(merged)
scBreak1 <-dcast(finalscoring, id+Week ~ AdjType, sum, value.var="Points")
scBreak2 <-dcast(finalscoring, id+Week ~ AdjType, sum, value.var="AdjTypeCnt")
View(scBreak1)
View(scBreak2)
scBreak1[scBreak1$id=="9448",]
scBreak1[scBreak2$id=="9448",]
scBreak1[scBreak2$id=="9448",]
scBreak1[scBreak1$id=="9448",]
scBreak1[scBreak1$id=="9448",]
scBreak2[scBreak2$id=="9448",]
scBreak2 <-dcast(finalscoring, id+Week ~ paste("Nbr_",AdjType,sep=""), sum, value.var="AdjTypeCnt")
View(scBreak2)
detailScoring <- merge(scBreak1,scBreak2, by=c("id","week"), all.x=TRUE)
View(scBreak1)
detailScoring <- merge(scBreak1,scBreak2, by=c("id","Week"), all.x=TRUE)
View(detailScoring)
View(detailScoring)
View(merged)
players <- merged
ourl="http://football33.myfantasyleague.com/2014/export?TYPE=nflSchedule&L=21819&W=3&JSON=0"
ourl <- "http://football33.myfantasyleague.com/2014/export?TYPE=nflSchedule&L=21819&W=3&JSON=0"
opp1 <- xmlToList(xmlParse(ourl))
opp1$.attrs <- NULL
opp1 <- data.frame(do.call(rbind,opp1))
View(opp1)
opp1 <- xmlToList(xmlParse(ourl))
opp1$.attrs <- NULL
opp1 <- data.frame(do.call(rbind,opp1))
View(opp1)
opp1 <- xmlToList(xmlParse(ourl))
opp1
opp1$.attrs <- NULL
opp1 <- xmlToList(xmlParse(ourl))
opp1$.attrs <- NULL
opp1
opp1 <- xmlToList(xmlParse(ourl))
opp1$.attrs <- NULL
opp1
opp1$matchup <- NULL
opp1
opp1$matchup$.attrs <- NULL
ourl
opp1
opp1$matchup$.attrs
opp1 <- xmlToList(xmlParse(ourl))
opp1$matchup
opp1$matchup$.attrs
opp1$matchup$.attrs <- NULL
opp1$matchup$.attrs
opp1 <- xmlToList(xmlParse(ourl))
opp1$matchup$team
opp1 <- xmlToList(xmlParse(ourl))
opp1$matchup$team
opp1 <- data.frame(do.call(rbind,opp1$matchup$team))
opp1 <- data.frame(do.call(rbind,list(opp1$matchup$team))
)
opp1 <- data.frame(do.call(rbind,list(opp1$matchup$team)))
ourl <- "http://football33.myfantasyleague.com/2014/export?TYPE=nflSchedule&L=21819&W=3&JSON=0"
opp1 <- xmlToList(xmlParse(ourl))
opp2 <- data.frame(do.call(rbind,list(opp1$matchup$team)))
View(opp2)
opp1$matchup$.attrs <- NULL
opp2 <- data.frame(do.call(rbind,list(opp1$matchup$team)))
opp1 <- xmlToList(xmlParse(ourl))
opp1$matchup$.attrs <- NULL
opp1
opp1$.attrs
opp1 <- xmlToList(xmlParse(ourl))
opp2 <- data.frame(do.call(rbind,list(opp1$matchup$team)))
View(opp2)
opp2 <- data.frame(do.call(rbind,list(opp1$matchup$team[1])))
View(opp2)
opp2 <- data.frame(do.call(rbind,list(opp1$matchup$team[[1]])))
View(opp2)
opp2 <- data.frame(do.call(rbind,list(opp1$matchup$team)))
opp1$matchup$team
opp1$matchup[2]$team
opp1$matchup[1]$team
opp3<-unlist(opp1)
opp3
opp1 <- xmlToList(xmlParse(ourl))
opp1$matchup$.attrs <- NULL
opp3<-unlist(opp1)
opp3
opp1$matchup$team$.attrs <- NULL
opp1 <- xmlToList(xmlParse(ourl))
opp1$matchup$.attrs <- NULL
opp1$matchup$team$.attrs <- NULL
opp1$.attrs <- NULL
opp3<-unlist(opp1)
opp3
opp1$matchup$..attrs <- NULL
opp1 <- xmlToList(xmlParse(ourl))
opp1$matchup$.attrs <- NULL
opp1$.attrs <- NULL
opp1$matchup$..attrs <- NULL
opp3<-unlist(opp1)
opp3
opp2 <- data.frame(do.call(rbind,list(opp1$matchup[28]$team)))
opp2 <- data.frame(do.call(rbind,list(opp1$matchup[14]$team)))
opp1 <- xmlToList(xmlParse(ourl))
opp2 <- data.frame(do.call(rbind,list(opp1$matchup[14]$team)))
opp2 <- data.frame(do.call(rbind,list(opp1$matchup[1]$team)))
opp2 <- data.frame(do.call(rbind,list(opp1$matchup[2]$team)))
opp2 <- data.frame(do.call(rbind,list(opp1$matchup[2]$team[1])))
opp1[[1]]
opp1[[1]][[1]]
opp1[[1]][[2]]
opp1[[1]][[3]]
opp1[[2]][[1]]
opp2 <- data.frame(do.call(rbind,list(opp1[[1]][[1]])))
nrow(opp1)
length(opp1)
ppp3 <- data.frame()
opp3 <- data.frame()
for (i in 1:length(opp1)){
for (j in 1:2){
opp2 <- data.frame(do.call(rbind,list(opp1[[i]][[j]])))
opp3 <- rbind(opp3,opp2)
}
}
View(opp3)
length(opp1)
opp1$.attrs <- NULL
length(opp1)
opp1 <- xmlToList(xmlParse(ourl))
opp3 <- data.frame()
opp1$.attrs <- NULL
for (i in 1:length(opp1)){
for (j in 1:2){
opp2 <- data.frame(do.call(rbind,list(opp1[[i]][[j]])))
opp3 <- rbind(opp3,opp2)
}
}
View(opp3)
ourl <- "http://football33.myfantasyleague.com/2014/export?TYPE=nflSchedule&L=21819&W=3&JSON=0"
opp1 <- xmlToList(xmlParse(ourl))
opp3 <- data.frame()
opp1$.attrs
opp1$.attrs[1]
opp1$.attrs <- NULL
for (i in 1:length(opp1)){
for (j in 1:2){
opp2 <- data.frame(do.call(rbind,list(opp1[[i]][[j]])))
opp3 <- rbind(opp3,opp2)
}
}
View(opp3)
View(ppp3)
opp3 <- data.frame()
o1<-"http://football33.myfantasyleague.com/2014/export?TYPE=nflSchedule&L=21819&W="
for (k in (1:length(weeks))){
ourl <- paste(o1,weeks[k],"&JSON=0",sep="")
opp1 <- xmlToList(xmlParse(ourl))
opp1$.attrs <- NULL
for (i in 1:length(opp1)){
for (j in 1:2){
opp2 <- data.frame(do.call(rbind,list(opp1[[i]][[j]])))
opp3 <- rbind(opp3,opp2)
}
}
opp3$Week = weeks[k]
}
opp3 <- data.frame()
o1<-"http://football33.myfantasyleague.com/2014/export?TYPE=nflSchedule&L=21819&W="
for (k in (1:length(weeks))){
ourl <- paste(o1,weeks[k],"&JSON=0",sep="")
opp1 <- xmlToList(xmlParse(ourl))
opp1$.attrs <- NULL
for (i in 1:length(opp1)){
for (j in 1:2){
opp2 <- data.frame(do.call(rbind,list(opp1[[i]][[j]])))
opp2$Week = weeks[k]
opp3 <- rbind(opp3,opp2)
}
}
}
View(opp3)
opp1[[2]][[1]]
opp1[[2]][[1]][1]
opp1[[2]][[1]]$id
opp1[[2]][[1]][[1]]
opp3 <- data.frame()
o1<-"http://football33.myfantasyleague.com/2014/export?TYPE=nflSchedule&L=21819&W="
for (k in (1:length(weeks))){
ourl <- paste(o1,weeks[k],"&JSON=0",sep="")
opp1 <- xmlToList(xmlParse(ourl))
opp1$.attrs <- NULL
for (i in 1:length(opp1)){
for (j in 1:2){
opp2 <- data.frame(do.call(rbind,list(opp1[[i]][[j]])))
opp2$Opponent <- as.character(ifelse(j=1,opp1[[i]][[2]][[1]],opp1[[i]][[1]][[1]]))
opp2$Week <- weeks[k]
opp3 <- rbind(opp3,opp2)
}
}
}
opp3 <- data.frame()
o1<-"http://football33.myfantasyleague.com/2014/export?TYPE=nflSchedule&L=21819&W="
for (k in (1:length(weeks))){
ourl <- paste(o1,weeks[k],"&JSON=0",sep="")
opp1 <- xmlToList(xmlParse(ourl))
opp1$.attrs <- NULL
for (i in 1:length(opp1)){
for (j in 1:2){
opp2 <- data.frame(do.call(rbind,list(opp1[[i]][[j]])))
opp2$Opponent <- as.character(ifelse(j==1,opp1[[i]][[2]][[1]],opp1[[i]][[1]][[1]]))
opp2$Week <- weeks[k]
opp3 <- rbind(opp3,opp2)
}
}
}
View(opp3)
opp3 <- data.frame()
o1<-"http://football33.myfantasyleague.com/2014/export?TYPE=nflSchedule&L=21819&W="
for (k in (1:17)){
ourl <- paste(o1,k,"&JSON=0",sep="")
opp1 <- xmlToList(xmlParse(ourl))
opp1$.attrs <- NULL
for (i in 1:length(opp1)){
for (j in 1:2){
opp2 <- data.frame(do.call(rbind,list(opp1[[i]][[j]])))
opp2$Opponent <- as.character(ifelse(j==1,opp1[[i]][[2]][[1]],opp1[[i]][[1]][[1]]))
opp2$Week <- k
opp3 <- rbind(opp3,opp2)
}
}
}
View(opp3)
colnames(opp3)[1] <- "team"
View(opp3)
teamweek<-opp3[,c("team","week","Opponent","isHome","rushDefenseRank","passDefenseRank","rushOffenseRank","passOffenseRank","spread")]
teamweek <- opp3[,c("team","week","Opponent","isHome","rushDefenseRank","passDefenseRank","rushOffenseRank","passOffenseRank","spread")]
teamweek <- opp3[,c("team","Week","Opponent","isHome","rushDefenseRank","passDefenseRank","rushOffenseRank","passOffenseRank","spread")]
View(teamweek)
teamweek1 <- merge(teamweek,teamweek,by.x=team,by.y=Opponent,all=TRUE)
teamweek1 <- teamweek
teamweek2 <- merge(teamweek, teamweek1, by.x=team , by.y=Opponent, all=TRUE)
teamweek$team
teamweek$team <- as.character(teamweek$team)
teamweek1 <- teamweek
teamweek2 <- merge(teamweek, teamweek1, by.x=team , by.y=Opponent, all=TRUE)
?merge
colnames(opp3)[1] <- "team"
teamweek <- opp3[,c("team","Week","Opponent","isHome","rushDefenseRank","passDefenseRank","rushOffenseRank","passOffenseRank","spread")]
teamweek2 <- merge(teamweek, teamweek1, by.x="team" , by.y="Opponent", all=TRUE)
teamweek2 <- merge(teamweek, teamweek1, by.x=c("team","Week") , by.y=c("Opponent","Week"), all=TRUE)
colnames(opp3)[1] <- "team"
teamweek <- opp3[,c("team","Week","Opponent","isHome","rushDefenseRank","passDefenseRank","rushOffenseRank","passOffenseRank","spread")]
teamweek1 <- teamweek[,c("Week","Opponent","isHome","rushDefenseRank","passDefenseRank","rushOffenseRank","passOffenseRank","spread")]
teamweek2 <- merge(teamweek, teamweek1, by.x=c("team","Week") , by.y=c("Opponent","Week"), all=TRUE)
View(teamweek2)
colnames(opp3)[1] <- "team"
teamweek <- opp3[,c("team","Week","Opponent","isHome","rushDefenseRank","passDefenseRank","rushOffenseRank","passOffenseRank","spread")]
teamweek$team <- as.character(teamweek$team)
teamweek1 <- teamweek[,c("Week","Opponent","rushDefenseRank","passDefenseRank","rushOffenseRank","passOffenseRank","spread")]
teamweek2 <- merge(teamweek, teamweek1, by.x=c("team","Week") , by.y=c("Opponent","Week"), all=TRUE)
colnames(teamwork2)<-c("team","Week","Opponent","TeamIsHome","TeamRushDefenseRank","TeamPassDefenseRank",
"TeamRushOffenseRank","TeamPassOffenseRank","TeamSpread","OpponentRushDefenseRank",
"OpponentPassDefenseRank","OpponentRushOffenseRank","OpponentPassOffenseRank",
"OpponentSpread")
colnames(teamweek2)<-c("team","Week","Opponent","TeamIsHome","TeamRushDefenseRank","TeamPassDefenseRank",
"TeamRushOffenseRank","TeamPassOffenseRank","TeamSpread","OpponentRushDefenseRank",
"OpponentPassDefenseRank","OpponentRushOffenseRank","OpponentPassOffenseRank",
"OpponentSpread")
View(teamweek2)
View(players)
View(teamweek2)
View(players)
View(players)
View(detailScoring)
View(teamweek2)
View(detailScoring)
View(finalscoring)
View(tester1)
tester1$AdjType[tester1$AdjType == "Fumbles Lost (to Opponent)"]
tester1$AdjType[tester1$AdjType == "Fumbles Lost (to Opponent)"] <- "Fumbles Lost"
View(tester1)
finalscoring<-tester1[,c("id","Week","AdjType","AdjTypeCnt","Points")]
#Reshape scoring breakdown into players and weeks
scBreak1 <-dcast(finalscoring, id+Week ~ AdjType, sum, value.var="Points")
scBreak2 <-dcast(finalscoring, id+Week ~ paste("Nbr_",AdjType,sep=""), sum, value.var="AdjTypeCnt")
detailScoring <- merge(scBreak1,scBreak2, by=c("id","Week"), all.x=TRUE)
players <- merged
View(detailScoring)
tester1$AdjType[tester1$AdjType == "Fumbles Lost (to Opponent)"] <- "Fumbles Lost"
finalscoring<-tester1[,c("id","Week","AdjType","AdjTypeCnt","Points")]
View(finalscoring)
#Reshape scoring breakdown into players and weeks
scBreak1 <-dcast(finalscoring, id+Week ~ AdjType, sum, value.var="Points")
View(scBreak1)
View(finalscoring)
tester1$AdjType[tester1$AdjType == "Fumbles Lost (to Opponent)"] <- "Fumbles Lost"
tester1$AdjType[tester1$AdjType == "Fumble Recoveries (from Opponent)"] <- "Fumble Recoveries"
finalscoring<-tester1[,c("id","Week","AdjType","AdjTypeCnt","Points")]
#Reshape scoring breakdown into players and weeks
scBreak1 <-dcast(finalscoring, id+Week ~ AdjType, sum, value.var="Points")
scBreak2 <-dcast(finalscoring, id+Week ~ paste("Nbr_",AdjType,sep=""), sum, value.var="AdjTypeCnt")
detailScoring <- merge(scBreak1,scBreak2, by=c("id","Week"), all.x=TRUE)
View(finalscoring)
View(detailScoring)
View(players)
View(detailScoring)
View(teamweek2)
install.packages("kernlab")
library(kernlab)
data
data(spam)
install.packages("manipulate")
setwd("C:\\Users\\EriksLaptop\\Documents\\DataScientistClasses\\ReproAnalysis\\proj1")
knit2html("PA1_assignment.Rmd")
library(knitr)
knit2html("PA1_assignment.Rmd")
setwd("~/DataScientistClasses/ReproAnalysis/proj1/gitproj1/RepData_PeerAssessment1")
setwd("~/DataScientistClasses/ReproAnalysis/proj1/gitproj1/RepData_PeerAssessment1")
setwd("C:\\Users\\EriksLaptop\\Documents\\DataScientistClasses\\ReproAnalysis\\proj1")
knit2html("PA1_template.Rmd")
setwd("~/DataScientistClasses/ReproAnalysis/proj1/gitproj1/RepData_PeerAssessment1")
library(knitr)
knit2html("PA1_template.Rmd")
setwd("~/DataScientistClasses/ReproAnalysis/proj1/gitproj1/RepData_PeerAssessment1")
library(knitr)
knit2html("PA1_template.Rmd")
setwd("~/DataScientistClasses/ReproAnalysis/proj1/gitproj1/RepData_PeerAssessment1")
library(knitr)
knit2html("PA1_template.Rmd")
